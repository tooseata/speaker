'use strict';

angular.module('speakerApp')
<<<<<<< HEAD
.controller('AdminCtrl', function ($scope, User, socketService, socket, $http, WebRtcService) {
  $scope.members = {};
  $scope.talkRequests = {};
  $scope.memberCount = 0;
  $scope.user = User.get();
  if (User.get().type === 'admin') {
    socketService.isAdmin = true;
  } else {
    $http.get('/session').success(function(data){ // async
      User.set(data);
      $scope.user = User.get();
      socket.emit('broadcast:joinRoom', {user: $scope.user});
      $http.get('/room/' + $scope.user.room + '').success(function(room){
        console.log(room, 'room');
        $scope.members = room.members;
        $scope.talkRequests = room.talkRequests;
        $scope.memberCount = $scope.countMembers();
      });
    });
  }

  $scope.queueStatus = false;
  $scope.openQueue = function(){
    $scope.queueStatus = true;
  };
  $scope.closeQueue = function(){
    $scope.queueStatus = false;
  };

  socket.on('new:talkRequest', function (user) {
    $scope.talkRequests[user.name] = user;
    socket.emit('clientIsChannelReady');
    socketService.isChannelReady = true;
  });

  socket.on('new:cancelTalkRequest', function (user) {
    delete $scope.talkRequests[user.name];
  });
  socket.on('new:leaveRoom', function (user) {
    delete $scope.talkRequests[user.name];
    delete $scope.members[user.name];
    $scope.memberCount--;
  });
  socket.on('new:joinRoom', function (user) {
    console.log('room was joined by ' + user.name);
    $scope.members[user.name] = user;
    $scope.memberCount++;
  });

  $scope.countMembers = function(){
    var count = -1;
    for (var i in $scope.members){
      count++;
    }
    return count;
  };

  socket.on('new:checkQueueStatus', function (user) {
    if ($scope.queueStatus) {
      socket.emit('broadcast:queueIsOpen', user);
    } else {
      socket.emit('broadcast:queueIsClosed', user);
    }
  });

  socket.on('new:microphoneClickedOnClientSide', function() {
    socketService.ready = true;
=======
  .controller('AdminCtrl', function ($scope, $location, User, Room, socket, $http) {
    // Scope
    $scope.talkRequests = Room.get().talkRequests;
    $scope.memberCount = Room.get().memberCount;
    $scope.user = User.get();
    $scope.queueStatus = true;

    $scope.openQueue = function(){
      $scope.queueStatus = true;
      toggleQueueOnServer(true);
    };
    $scope.closeQueue = function(){
      $scope.queueStatus = false;
      toggleQueueOnServer(false);
    };

    // Private Variables and Page load Logic.

    if (User.get().type !== 'admin'){
      $http.get('/session').success(function(data){
        if(data){
          User.set(data);
          $scope.user = User.get();
          socket.emit('broadcast:join', $scope.user);
          $http.get('/room/' + $scope.user.room + '').success(function(room){
            $scope.talkRequests = room.talkRequests;
            $scope.memberCount = countMembers(room.members);
          });
        }
      });
    }

    var toggleQueueOnServer = function(bool){
      $http.post('/toggleQueue', JSON.stringify({room: $scope.user.room, bool: bool}));
    };

    var countMembers = function(members){
      var count = 0;
      for (var i in members){
        count++;
      }
      return count;
    };

    //              Listeners

    socket.on('new:talkRequest', function (user) {
      $scope.talkRequests[user.name] = user;
    });

    socket.on('new:cancelTalkRequest', function (user) {
      delete $scope.talkRequests[user.name];
    });

    socket.on('new:leaveRoom', function (user) {
      delete $scope.talkRequests[user.name];
      $scope.memberCount--;
    });

    socket.on('new:joinRoom', function (user) {
      $scope.memberCount++;
    });

    $scope.fillRequest = function(name){
      Room.setTalkRequests($scope.talkRequests);
      Room.setMemberCount($scope.memberCount);
      Room.setTalker(name);
      $location.path('/listen/');
    };

>>>>>>> f9143032334cb0c99c4773b72de9136a262f8142
  });
});


